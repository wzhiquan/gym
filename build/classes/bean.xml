<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    	 http://www.springframework.org/schema/beans/spring-beans.xsd
     	 http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/tx
     	 http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 1. 连接池实例 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/gym"></property>
		<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
		<property name="user" value="root"></property>
		<property name="password" value="000000"></property>
		<property name="initialPoolSize" value="3"></property>
		<property name="maxPoolSize" value="6"></property>
	</bean>

	<!-- 2. Spring管理SessionFactory 【全部配置都写到spring中】 -->
	<!-- # 注入DataSource、 注入常用配置属性、映射配置属性 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="current_session_context_class">thread</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:com/gym/entity/*.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!-- 注解的使用 -->
	<!-- 1.命名空间的映入 xmlns:context="http://www.springframework.org/schema/context" 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd -->
	<!--2.相关jar包的引入 spring-aop-3.2.5.RELEASE.jar aopalliance.jar aspectjweaver.jar 
		aspectjrt.jar -->
	<!--3. 开启注解 步骤如下配置 -->
	<!-- 使用Autowired注解时，必须先在Spring容器中声明AutowiredAnnotationBeanPostProcessor的Bean： -->
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor">
	</bean>
	<!-- 同理如果使用其他的注解时也必须声明响应的bean 而Spring为我们提供了一种极为方便注册这些BeanPostProcessor的方式 
		就是使用以下方式隐式向Spring容器注册 -->

	<context:annotation-config />
	<!-- 开启注解扫描 -->
	<context:component-scan base-package="com.gym" />

	<!-- 3. 事务相关配置 -->
	<!-- 3.1 事务管理器类 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- 创建事务管理器，管理sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 3.2 事务增强(如何管理事务) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>

	<!-- 3.3 Aop配置 = 切入点表达式(拦截目标对象，生成代理) + 事务增强应用 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.gym.*.dao.*.*(..))" id="pt"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
	</aop:config>

</beans>     










